#!/usr/bin/env ruby
require File.dirname(__FILE__) + '/../config/environment.rb'

class MailFetcherDaemon < Daemon::Base
  
  @config = YAML.load_file("#{RAILS_ROOT}/config/mail.yml")
  @config = @config[RAILS_ENV].to_options
  
  @sleep_time = @config.delete(:sleep_time) || 60
  def self.start
    puts "Starting MailFetcherDaemon"
    
    logger = Logger.new("#{RAILS_ROOT}/log/#{RAILS_ENV}-mail.log") 

	begin
	  Lockfile.new('cron_mail_fetcher.lock', :retries => 0) do    
	    # Add your own receiver object below
	    @fetcher = Fetcher.create({:receiver => nil}.merge(@config))
		
	    loop do
	    	begin
				@fetcher.fetch
	  		rescue Errno::ENOTCONN 
	  			# Gmail kills your socket after you log out rather than after you disconnect, so trying to disconnect raises an error. Ignore it.
	  		end
	      
	      sleep(@sleep_time)
	    end
    end
  rescue
    rescue Lockfile::MaxTriesLockError => e 
    puts "Another fetcher is already running. Exiting." 
  end
  
  def self.stop
    puts "Stopping MailFetcherDaemon"
  end
  
end

MailFetcherDaemon.daemonize
